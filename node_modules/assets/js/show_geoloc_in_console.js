// Show in console
function getLocation_in_console(enableHighAccuracy, maximumAge, timeout) {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition_in_console, showError_in_console, {
                enableHighAccuracy: enableHighAccuracy,
                maximumAge: maximumAge === "" ? Infinity : maximumAge,
                timeout: timeout === "" ? Infinity : timeout
            }
        );
        /* Comment back in to check input
        console.log("-------------------------------------------");
        console.log("enableHighAccuracy: " + enableHighAccuracy);
        let maxA = maximumAge === "" ? Infinity : maximumAge;
        let timeo = timeout === "" ? Infinity : timeout;
        console.log("maximumAge: " + maxA);
        console.log("timeout: " + timeo);
        console.log("-------------------------------------------");
        */
    } else {
        console.log("Geolocation is not supported by this browser.");
    }
}

function showPosition_in_console(position) {
    let timestamp = new Date(position.timestamp);
    console.log("Latitude: " + position.coords.latitude);
    console.log("Longitude: " + position.coords.longitude);
    console.log("Accuracy: " + position.coords.accuracy);
    console.log("Altitude: " + position.coords.altitude);
    console.log("Altitude accuracy: " + position.coords.altitudeAccuracy);
    console.log("Heading: " + position.coords.heading);
    console.log("Speed: " + position.coords.speed);
    console.log("Timestamp: " + timestamp.toLocaleString());
}

// error handling fallback
function showError_in_console(error) {
    switch (error.code) {
        case error.PERMISSION_DENIED:
            console.log("PERMISSION_DENIED");
            break;
        case error.POSITION_UNAVAILABLE:
            console.log("POSITION_UNAVAILABLE");
            break;
        case error.TIMEOUT:
            console.log("TIMEOUT");
            break;
        default:
            console.log("An unknown error occurred.");
            break;
    }
}

// blend in algorithm
function blendInAlgo() {
    let algo = document.getElementById("algo");
    if (algo.style.display === "none") {
        algo.style.display = "block";
    } else {
        algo.style.display = "none";
    }
}
